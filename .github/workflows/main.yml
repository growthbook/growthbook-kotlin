name: Release

on:
  workflow_dispatch

env:
  LIB_VERSION: 6.0.1

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        clean: 'true'
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'
    - uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        configFilePath: ./.github/gitversion.yml
    - name: Gradle clean
      run: ./gradlew clean --info
    - name: Build with Gradle
      run: ./gradlew -Pversion=$LIB_VERSION kotlinUpgradeYarnLock :GrowthBook:build --info
    # Skip release creation - we just want the bundle for manual upload
    - name: Build signed artifacts for Maven Central
      run: |
        GPG_PRIVATE_KEY="${{secrets.GPG_PRIVATE_KEY}}" GPG_PRIVATE_PASSWORD="${{secrets.GPG_PRIVATE_PASSWORD}}" ./gradlew -Pversion=$LIB_VERSION :GrowthBook:publishToMavenLocal
        
        # Generate missing checksums for Central Portal
        echo "🔧 Generating MD5 and SHA1 checksums for all artifacts..."
        find ~/.m2/repository/io/github/growthbook -name "*.jar" -o -name "*.pom" -o -name "*.aar" -o -name "*.klib" -o -name "*.module" -o -name "*.json" | while read file; do
          if [ -f "$file" ]; then
            md5sum "$file" | cut -d' ' -f1 > "$file.md5"
            sha1sum "$file" | cut -d' ' -f1 > "$file.sha1"
            echo "✅ Generated checksums for $(basename "$file")"
          fi
        done
    - name: Create Maven Central deployment bundle
      run: |
        echo "📦 Creating deployment bundle for Manual Upload to Central Portal..."
        echo "🔍 First, let's see what was actually published:"
        ls -la ~/.m2/repository/
        echo ""
        echo "🔍 Looking for any io/github structure:"
        find ~/.m2/repository -name "*io*" -type d || echo "No io directories found"
        echo ""
        echo "🔍 Looking for any growthbook artifacts:"
        find ~/.m2/repository -name "*growthbook*" -type f || echo "No growthbook files found"
        echo ""
        echo "🔍 Looking for any 6.0.1 artifacts:"
        find ~/.m2/repository -name "*6.0.1*" -type f | head -20 || echo "No 6.0.1 files found"
        echo ""
        
        # Try to find the actual location (checking current namespace first)
        if [ -d ~/.m2/repository/io/github/growthbook ]; then
          echo "✅ Found current namespace structure: io.github.growthbook"
          cd ~/.m2/repository/io/github/growthbook
        elif [ -d ~/.m2/repository/io/growthbook/sdk ]; then
          echo "✅ Found old namespace structure: io.growthbook.sdk"
          cd ~/.m2/repository/io/growthbook/sdk
        else
          echo "🔍 Searching for any GrowthBook artifacts..."
          ARTIFACT_DIR=$(find ~/.m2/repository -name "*GrowthBook*" -type d | head -1)
          if [ -n "$ARTIFACT_DIR" ]; then
            echo "📁 Found artifacts in: $ARTIFACT_DIR"
            cd "$ARTIFACT_DIR/.."
          else
            echo "❌ No artifacts found, creating empty bundle"
            mkdir -p /tmp/empty-bundle
            cd /tmp/empty-bundle
          fi
        fi
        
        echo "📍 Current directory: $(pwd)"
        echo "🔍 All 6.0.1 artifacts that will be included:"
        find . -name "*6.0.1*" -type f | sort || echo "No 6.0.1 files in current location"
        echo ""
        
        # Create proper Central Portal bundle structure
        echo "🏗️ Creating proper bundle structure for Central Portal..."
        mkdir -p /tmp/central-bundle
        
        # Copy all artifacts with proper structure: groupId/artifactId/version/files
        find . -name "*6.0.1*" -type f | while read file; do
          # Extract relative path and create proper structure
          rel_path=${file#./}
          target_path="/tmp/central-bundle/io/github/growthbook/$rel_path"
          mkdir -p "$(dirname "$target_path")"
          cp "$file" "$target_path"
          echo "📁 Added: $rel_path"
        done
        
        cd /tmp/central-bundle
        echo "📦 Bundle structure:"
        find . -type f | head -20
        zip -r /tmp/growthbook-6.0.1-central-bundle.zip . || echo "Created empty bundle"
        
        # Verify the bundle was created and show details
        if [ -f /tmp/growthbook-6.0.1-central-bundle.zip ]; then
          echo "✅ Bundle file exists:"
          ls -la /tmp/growthbook-6.0.1-central-bundle.zip
          echo ""
          echo "📦 Bundle contents preview:"
          unzip -l /tmp/growthbook-6.0.1-central-bundle.zip | head -30
          echo ""
          echo "✅ Bundle created with $(unzip -l /tmp/growthbook-6.0.1-central-bundle.zip | grep -c "6.0.1") files"
          echo ""
          echo "🔍 Checking for required file types in bundle:"
          unzip -l /tmp/growthbook-6.0.1-central-bundle.zip | grep -E '\.(jar|pom|aar|klib|module|asc|md5|sha1)$' | wc -l | xargs echo "Total artifact files:"
        else
          echo "❌ Bundle creation failed!"
          # Create a minimal bundle so the upload doesn't fail
          echo "Creating minimal bundle for debugging..."
          echo "No artifacts found - please check the build configuration" > /tmp/debug.txt
          zip /tmp/growthbook-6.0.1-central-bundle.zip /tmp/debug.txt
        fi
    - name: Upload Maven Central bundle
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if previous steps had issues
      with:
        name: growthbook-6.0.1-maven-central-bundle
        path: /tmp/growthbook-6.0.1-central-bundle.zip
        retention-days: 7
    # Release asset uploads removed - we only need the bundle artifact
