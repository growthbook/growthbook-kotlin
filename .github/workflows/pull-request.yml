name: Test coverage

on:
  pull_request:

jobs:

  collect_coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Get coverage
      run: ./gradlew koverReport
    - name: Parse coverage
      id: parse_coverage
      run: |
        sudo apt -y install libxml2-utils
        xmllint --xpath "string(/report/counter[@type='LINE']/@covered)" build/reports/kover/project-xml/report.xml
        echo "::set-output name=line_covered::$(xmllint --xpath "string(/report/counter[@type='LINE']/@covered)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=line_missed::$(xmllint --xpath "string(/report/counter[@type='LINE']/@missed)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=instruction_covered::$(xmllint --xpath "string(/report/counter[@type='INSTRUCTION']/@covered)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=instruction_missed::$(xmllint --xpath "string(/report/counter[@type='INSTRUCTION']/@missed)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=branch_covered::$(xmllint --xpath "string(/report/counter[@type='BRANCH']/@covered)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=branch_missed::$(xmllint --xpath "string(/report/counter[@type='BRANCH']/@missed)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=method_covered::$(xmllint --xpath "string(/report/counter[@type='METHOD']/@covered)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=method_missed::$(xmllint --xpath "string(/report/counter[@type='METHOD']/@missed)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=class_covered::$(xmllint --xpath "string(/report/counter[@type='CLASS']/@covered)" build/reports/kover/project-xml/report.xml)"
        echo "::set-output name=class_missed::$(xmllint --xpath "string(/report/counter[@type='CLASS']/@missed)" build/reports/kover/project-xml/report.xml)"
    - name: Calculate coverage
      id: caulculate_coverage_percentage
      run: |
        echo "::set-output name=line_coverage::$(awk -v covered="${{steps.parse_coverage.outputs.line_covered}}" -v missed="${{steps.parse_coverage.outputs.line_missed}}" 'BEGIN{printf "%.0f", covered/(missed+covered) * 100}')"
        echo "::set-output name=instruction_coverage::$(awk -v covered="${{steps.parse_coverage.outputs.instruction_covered}}" -v missed="${{steps.parse_coverage.outputs.instruction_missed}}" 'BEGIN{printf "%.0f", covered/(missed+covered) * 100}')"
        echo "::set-output name=branch_coverage::$(awk -v covered="${{steps.parse_coverage.outputs.branch_covered}}" -v missed="${{steps.parse_coverage.outputs.branch_missed}}" 'BEGIN{printf "%.0f", covered/(missed+covered) * 100}')"
        echo "::set-output name=method_coverage::$(awk -v covered="${{steps.parse_coverage.outputs.method_covered}}" -v missed="${{steps.parse_coverage.outputs.method_missed}}" 'BEGIN{printf "%.0f", covered/(missed+covered) * 100}')"
        echo "::set-output name=class_coverage::$(awk -v covered="${{steps.parse_coverage.outputs.class_covered}}" -v missed="${{steps.parse_coverage.outputs.class_missed}}" 'BEGIN{printf "%.0f", covered/(missed+covered) * 100}')"
    - uses: mshick/add-pr-comment@v1
      with:
        message: |
          | Area  | Coverage(%) | Status |
          | ------------- | ------------- | ------------- |
          | **Line**  | ${{(steps.caulculate_coverage_percentage.outputs.line_coverage)}}  | $(if ((${{steps.caulculate_coverage_percentage.outputs.line_coverage}}>80)); then echo ":heavy_check_mark:"; else echo ":x:"; fi) |
          | **Instruction**  | ${{(steps.caulculate_coverage_percentage.outputs.instruction_coverage)}}  | $(if ((${{steps.caulculate_coverage_percentage.outputs.instruction_coverage}}>80)); then echo ":heavy_check_mark:"; else echo ":x:"; fi)  |
          | **Branch**  | ${{(steps.caulculate_coverage_percentage.outputs.branch_coverage)}}  | $(if ((${{steps.caulculate_coverage_percentage.outputs.branch_coverage}}>80)); then echo ":heavy_check_mark:"; else echo ":x:"; fi)  |
          | **Method**  | ${{(steps.caulculate_coverage_percentage.outputs.method_coverage)}}  | $(if ((${{steps.caulculate_coverage_percentage.outputs.method_coverage}}>80)); then echo ":heavy_check_mark:"; else echo ":x:"; fi)  |
          | **Class**  | ${{(steps.caulculate_coverage_percentage.outputs.class_coverage)}}  | $(if ((${{steps.caulculate_coverage_percentage.outputs.class_coverage}}>80)); then echo ":heavy_check_mark:"; else echo ":x:"; fi)  |
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        allow-repeats: false
    - name: Check coverage
      if: ${{(steps.caulculate_coverage_percentage.outputs.line_coverage) < 80}}
      run: exit "Line coverage expected to be > 80 but was ${{steps.caulculate_coverage_percentage.outputs.line_coverage}}" // failure